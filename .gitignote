## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Visual Studio cache/options
.vs/
*.cache
*.apiproj
*.csproj.user
*.ntvs_analysis.dat

# Visual Studio Code
.vscode/
*.code-workspace

# Others
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishxml
*.pubxml
*.pubxml.user
*.snk
orleans.codegen.cs

# Dotnet core specific
**/bin/
**/obj/
*.dll
*.exe
*.pdb
*.nupkg
*.tmp
*.user
*.zip
*.tar.gz
*.lock.json

# NuGet Packages
*.nupkg
packages/
**/packages/*
!packages/*.targets

# Enable "build/" folder in the root to be used for MSBuild binary output.
!build/

# DotCover is a Code Coverage Tool
*.dotCover

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Fakes
FakesAssemblies/

# Node.js
node_modules/

# Other custom rules
# Add any additional rules specific to your project here